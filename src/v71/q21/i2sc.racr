#[doc = "Inter-IC Sound Controller"]
peripheral I2sc {
    i2sc_cr: I2scCr @ 0x0,
    i2sc_mr: I2scMr @ 0x4,
    i2sc_sr: I2scSr @ 0x8,
    i2sc_scr: I2scScr @ 0xc,
    i2sc_ssr: I2scSsr @ 0x10,
    i2sc_ier: I2scIer @ 0x14,
    i2sc_idr: I2scIdr @ 0x18,
    i2sc_imr: I2scImr @ 0x1c,
    i2sc_rhr: I2scRhr @ 0x20,
    i2sc_thr: I2scThr @ 0x24,
}
#[doc = "Control Register"]
WriteOnly register[32] I2scCr {
    #[doc = "Receiver Enable"]
    rxen[0],
    #[doc = "Receiver Disable"]
    rxdis[1],
    #[doc = "Clocks Enable"]
    cken[2],
    #[doc = "Clocks Disable"]
    ckdis[3],
    #[doc = "Transmitter Enable"]
    txen[4],
    #[doc = "Transmitter Disable"]
    txdis[5],
    #[doc = "Software Reset"]
    swrst[7],
}
#[doc = "Mode Register"]
ReadWrite register[32] I2scMr {
    #[doc = "Inter-IC Sound Controller Mode"]
    mode[0] {
        #[doc = "I2SC_CK and I2SC_WS pin inputs used as bit clock and word select/frame synchronization."]
        Slave = 0x0,
        #[doc = "Bit clock and word select/frame synchronization generated by I2SC from MCK and output to I2SC_CK and I2SC_WS pins. Peripheral clock or GCLK is output as master clock on I2SC_MCK if I2SC_MR.IMCKMODE is set."]
        Master = 0x1,
    },
    #[doc = "Data Word Length"]
    datalength[2..5] {
        #[doc = "Data length is set to 32 bits"]
        _32Bits = 0x0,
        #[doc = "Data length is set to 24 bits"]
        _24Bits = 0x1,
        #[doc = "Data length is set to 20 bits"]
        _20Bits = 0x2,
        #[doc = "Data length is set to 18 bits"]
        _18Bits = 0x3,
        #[doc = "Data length is set to 16 bits"]
        _16Bits = 0x4,
        #[doc = "Data length is set to 16-bit compact stereo. Left sample in bits 15:0 and right sample in bits 31:16 of same word."]
        _16BitsCompact = 0x5,
        #[doc = "Data length is set to 8 bits"]
        _8Bits = 0x6,
        #[doc = "Data length is set to 8-bit compact stereo. Left sample in bits 7:0 and right sample in bits 15:8 of the same word."]
        _8BitsCompact = 0x7,
    },
    #[doc = "Data Format"]
    format[6..8] {
        #[doc = "I2S format, stereo with I2SC_WS low for left channel, and MSB of sample starting one I2SC_CK period after I2SC_WS edge"]
        I2s = 0x0,
        #[doc = "Left-justified format, stereo with I2SC_WS high for left channel, and MSB of sample starting on I2SC_WS edge"]
        Lj = 0x1,
    },
    #[doc = "Receive Mono"]
    rxmono[8],
    #[doc = "Single or Multiple DMA Controller Channels for Receiver"]
    rxdma[9],
    #[doc = "Loopback Test Mode"]
    rxloop[10],
    #[doc = "Transmit Mono"]
    txmono[12],
    #[doc = "Single or Multiple DMA Controller Channels for Transmitter"]
    txdma[13],
    #[doc = "Transmit Data when Underrun"]
    txsame[14],
    #[doc = "Selected Clock to I2SC Master Clock Ratio"]
    imckdiv[16..22],
    #[doc = "Master Clock to fs Ratio"]
    imckfs[24..30] {
        #[doc = "Sample frequency ratio set to 32"]
        M2sf32 = 0x0,
        #[doc = "Sample frequency ratio set to 64"]
        M2sf64 = 0x1,
        #[doc = "Sample frequency ratio set to 96"]
        M2sf96 = 0x2,
        #[doc = "Sample frequency ratio set to 128"]
        M2sf128 = 0x3,
        #[doc = "Sample frequency ratio set to 192"]
        M2sf192 = 0x5,
        #[doc = "Sample frequency ratio set to 256"]
        M2sf256 = 0x7,
        #[doc = "Sample frequency ratio set to 384"]
        M2sf384 = 0xb,
        #[doc = "Sample frequency ratio set to 512"]
        M2sf512 = 0xf,
        #[doc = "Sample frequency ratio set to 768"]
        M2sf768 = 0x17,
        #[doc = "Sample frequency ratio set to 1024"]
        M2sf1024 = 0x1f,
        #[doc = "Sample frequency ratio set to 1536"]
        M2sf1536 = 0x2f,
        #[doc = "Sample frequency ratio set to 2048"]
        M2sf2048 = 0x3f,
    },
    #[doc = "Master Clock Mode"]
    imckmode[30],
    #[doc = "I2SC_WS Slot Width"]
    iws[31],
}
#[doc = "Status Register"]
ReadOnly register[32] I2scSr {
    #[doc = "Receiver Enabled"]
    rxen[0],
    #[doc = "Receive Ready"]
    rxrdy[1],
    #[doc = "Receive Overrun"]
    rxor[2],
    #[doc = "Transmitter Enabled"]
    txen[4],
    #[doc = "Transmit Ready"]
    txrdy[5],
    #[doc = "Transmit Underrun"]
    txur[6],
    #[doc = "Receive Overrun Channel"]
    rxorch[8..10],
    #[doc = "Transmit Underrun Channel"]
    txurch[20..22],
}
#[doc = "Status Clear Register"]
WriteOnly register[32] I2scScr {
    #[doc = "Receive Overrun Status Clear"]
    rxor[2],
    #[doc = "Transmit Underrun Status Clear"]
    txur[6],
    #[doc = "Receive Overrun Per Channel Status Clear"]
    rxorch[8..10],
    #[doc = "Transmit Underrun Per Channel Status Clear"]
    txurch[20..22],
}
#[doc = "Status Set Register"]
WriteOnly register[32] I2scSsr {
    #[doc = "Receive Overrun Status Set"]
    rxor[2],
    #[doc = "Transmit Underrun Status Set"]
    txur[6],
    #[doc = "Receive Overrun Per Channel Status Set"]
    rxorch[8..10],
    #[doc = "Transmit Underrun Per Channel Status Set"]
    txurch[20..22],
}
#[doc = "Interrupt Enable Register"]
WriteOnly register[32] I2scIer {
    #[doc = "Receiver Ready Interrupt Enable"]
    rxrdy[1],
    #[doc = "Receiver Overrun Interrupt Enable"]
    rxor[2],
    #[doc = "Transmit Ready Interrupt Enable"]
    txrdy[5],
    #[doc = "Transmit Underflow Interrupt Enable"]
    txur[6],
}
#[doc = "Interrupt Disable Register"]
WriteOnly register[32] I2scIdr {
    #[doc = "Receiver Ready Interrupt Disable"]
    rxrdy[1],
    #[doc = "Receiver Overrun Interrupt Disable"]
    rxor[2],
    #[doc = "Transmit Ready Interrupt Disable"]
    txrdy[5],
    #[doc = "Transmit Underflow Interrupt Disable"]
    txur[6],
}
#[doc = "Interrupt Mask Register"]
ReadOnly register[32] I2scImr {
    #[doc = "Receiver Ready Interrupt Disable"]
    rxrdy[1],
    #[doc = "Receiver Overrun Interrupt Disable"]
    rxor[2],
    #[doc = "Transmit Ready Interrupt Disable"]
    txrdy[5],
    #[doc = "Transmit Underflow Interrupt Disable"]
    txur[6],
}
#[doc = "Receiver Holding Register"]
ReadOnly register[32] I2scRhr {
    #[doc = "Receiver Holding Register"]
    rhr[0..32],
}
#[doc = "Transmitter Holding Register"]
WriteOnly register[32] I2scThr {
    #[doc = "Transmitter Holding Register"]
    thr[0..32],
}
